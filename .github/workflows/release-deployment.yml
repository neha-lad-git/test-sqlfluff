name: Release Deployment

on:
  workflow_dispatch:
    inputs:
      release_version:
        type: string
        description: 'Optional: Specify a release version or leave blank to automatically select the latest'
        required: false
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Fetch available releases
    - name: Get available releases
      id: get_releases
      uses: actions/github-script@v4
      with:
        script: |
          const releases = await github.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          if (!releases.data.length) {
            throw new Error("No releases found");
          }
          const releaseTags = releases.data.map(release => release.tag_name);
          core.setOutput("releases", releaseTags);
          core.setOutput("latest_release", releaseTags[0]);
          console.log("Available releases:", releaseTags.join(", "));
          return releaseTags;

    # Step 2: Log available releases (to show the user which ones are available)
    - name: Display available releases
      run: |
        echo "Available Releases: ${{ steps.get_releases.outputs.releases }}"
    
    # Step 3: Choose the release version (either provided by the user or the latest)
    - name: Set release version
      run: |
        if [ "${{ github.event.inputs.release_version }}" == "" ]; then
          echo "No release version provided. Automatically selecting the latest release."
          echo "RELEASE_VERSION=${{ steps.get_releases.outputs.latest_release }}" >> $GITHUB_ENV
        else
          echo "Using provided release version: ${{ github.event.inputs.release_version }}"
          echo "RELEASE_VERSION=${{ github.event.inputs.release_version }}" >> $GITHUB_ENV
        fi

    # Step 4: Show which release version was selected
    - name: Show selected release version
      run: |
        echo "Selected Release Version: ${{ env.RELEASE_VERSION }}"

    # Step 5: Download and extract release asset
    - name: Download and extract release asset
      uses: robinraju/release-downloader@v1
      with:
        repository: ${{ github.repository }}
        tag: ${{ env.RELEASE_VERSION }}
        fileName: 'test-${{ env.RELEASE_VERSION }}.zip'
        latest: false
        extract: true
