name: ADW-new-Deployment-Workflow
 
on:
    workflow_dispatch:
      inputs:
        environment:
          description: 'Select the environment to deploy to'
          required: true
          default: 'TEST'
          type: choice
          options:
            - TEST
            - STG
            - PRD
        release_version:
          type: choice
          description: Select the release version
          required: true
          options:
            $RELEASE

jobs:
  deploy:
    runs-on: ${{ github.event.inputs.environment == 'TEST' && vars.RUNNER_NAME_TEST || (github.event.inputs.environment == 'STG' && vars.RUNNER_NAME_STG || vars.RUNNER_NAME_PROD) }}
    environment: ${{ github.event.inputs.environment }}
    
    steps:
    - name: Set up environment
      run: |
        echo "RELEASE_VERSION=${{ github.event.inputs.release_version }}" >> $GITHUB_ENV
    - name: Get the latest release (if release_version is not specified)
      id: get_latest_release
      if: github.event.inputs.release_version == ''
      uses: actions/github-script@v4
      with:
        script: |
          const latestRelease = await github.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          return latestRelease.data.tag_name;
    - name: Set release version to latest (if release_version is not specified)
      if: github.event.inputs.release_version == ''
      run: echo "RELEASE_VERSION=${{ steps.get_latest_release.outputs.result }}" >> $GITHUB_ENV

    - name: Ensure permissions
      run: chmod -R u+rwx ${{ github.workspace }}

    - name: Remove anything
      if: always()  # This ensures that the step runs regardless of the outcome of previous steps
      run: |
        rm -rf ${{ github.workspace }}/*
    
    - name: Download and extract release asset
      uses: robinraju/release-downloader@v1
      with:
        repository: ${{ github.repository }}
        tag: ${{ env.RELEASE_VERSION }}
        fileName: 'ADW-${{ env.RELEASE_VERSION }}.zip'
        latest: false
        extract: true

    - name: Print Home
      run: ls -l